PARA HACER QUE NUESTRO PROGRAMA PASE A PRODUCCION

se habre el entorno virtual

Se installa en CMder, el siguiente codigo

pip install pyinstaller

Luego de instalar, colocamos el siguiente codido
pyi-makespec catalogo_peliculas.py --windowed

Cuando termine de ejecutar va a crear un archivo .spec

ese se habre y va a contener algo asi:

# -*- mode: python ; coding: utf-8 -*-


block_cipher = None


a = Analysis(
    ['catalogo_peliculas.py'],
    pathex=[],
    binaries=[],
    datas=[('./img/*.ico', 'image'),('./database/*.db', 'database')],
    hiddenimports=[],
    hookspath=[],
    hooksconfig={},
    runtime_hooks=[],
    excludes=[],
    win_no_prefer_redirects=False,
    win_private_assemblies=False,
    cipher=block_cipher,
    noarchive=False,
)
pyz = PYZ(a.pure, a.zipped_data, cipher=block_cipher)

exe = EXE(
    pyz,
    a.scripts,
    [],
    exclude_binaries=True,
    name='catalogo_peliculas',
    debug=False,
    bootloader_ignore_signals=False,
    strip=False,
    upx=True,
    console=False,
    disable_windowed_traceback=False,
    argv_emulation=False,
    target_arch=None,
    codesign_identity=None,
    entitlements_file=None,
)
coll = COLLECT(
    exe,
    a.binaries,
    a.zipfiles,
    a.datas,
    strip=False,
    upx=True,
    upx_exclude=[],
    name='catalogo_peliculas',
)

---

Vamos a modificar el datas=[], quedaria asi:
datas=[('./img/*.ico', 'image'),('./database/*.db', 'database')],


luego colocamos el siguiente codigo en CMDER
pyinstaller catalogo_peliculas.spec 

nota: aqui hiria nombredelarchivo.spec

cuando termine de ejecutar, generaria las siguientes carpetas
build, dist